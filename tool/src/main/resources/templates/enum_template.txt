package org.example;

import com.raylib.Raylib;
import java.util.HashMap;
import java.util.Map;

public class RaylibWrapper {

    <th:block th:each="enum : ${enums}">
    public enum [[${enum.name}]] {
        <th:block th:each="field : ${enum.fields}">
        [[${field.name}]](Raylib.[[${enum.name}]].[[${field.name}]])<th:if="${!field.last}">,</th:if>
        </th:block>;

        private final int value;
        
        private [[${enum.name}]](int value) {
            this.value = value;
        }

        private static final Map<Integer, [[${enum.name}]]> BY_VALUE = new HashMap<>();
        
        static {
            for ([[${enum.name}]] e : values()) {
                BY_VALUE.put(e.value, e);
            }
        }

        private static [[${enum.name}]] fromValue(int value) {
            return BY_VALUE.get(value);
        }
    }
    </th:block>
}
