package org.example;

import com.raylib.Raylib;
import java.util.HashMap;
import java.util.Map;

public class RaylibWrapper {

[# th:each="enumItem : ${enums}"]
    public enum [[${enumItem.name}]] {

    [# th:each="field : ${enumItem.fields}"]
        [[${field.name}]](Raylib.[[${enumItem.name}]].[[${field.name}]])[# th:if="${!field.last}"],[/]
    [/];

        private final int value;
        
        private [[${enumItem.name}]](int value) {
            this.value = value;
        }

        private static final Map<Integer, [[${enumItem.name}]]> BY_VALUE = new HashMap<>();
        
        static {
            for ([[${enumItem.name}]] e : values()) {
                BY_VALUE.put(e.value, e);
            }
        }

        private static [[${enumItem.name}]] fromValue(int value) {
            return BY_VALUE.get(value);
        }
    }
[/]
}
